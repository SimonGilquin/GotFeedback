@model Topic
@{
  string title = null;
  string color = null;
  switch (Model.Category)
  {
    case TopicCategory.Bug:
      title = "Report a bug";
          color = "danger";
      break;
    case TopicCategory.Idea:
      title = "Give feedback";
          color = "success";
      break;
    case TopicCategory.Question:
      title = "Get help";
          color = "warning";
      break;
  }
}


@*
<h2>@title</h2>
*@
  @using (Html.BeginForm("New", "Topics", FormMethod.Post, new { @class = "" }))
  {
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Category)

    @Html.ValidationSummary(true, "", new { @class = "text-"+color })
    <div class="form-group">
      @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "sr-only" })
      <div class="input-group">
        @Html.TextBoxFor(model => model.Title, new { @class = "form-control", placeholder = title, required = "required" })
        <span class="input-group-btn">
          <input type="submit" value="Post" class="btn btn-@color" />
        </span>
      </div>
      @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-"+color })
    </div>
  }
